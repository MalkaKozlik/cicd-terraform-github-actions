name: 'Terraform Automation'

on:
  workflow_dispatch: 
    inputs:
      workspaceId:
        required: true
      httpTriggerURL:
        required: true
      mainManager: 
        required: true
      
      
      # logLevel:
      #   description: 'Log level'
      #   required: true
      #   default: 'warning'
      #   type: choice
      #   options:
      #   - info
      #   - warning
      #   - debug



env:
  TF_VAR_subscription_id: ${{secrets.SUBSCRIPTION_ID}}
  TF_VAR_WORKSPACE_ID:  ${{inputs.workspaceId}}
  TF_VAR_HTTP_TRIGGER_URL:  ${{inputs.httpTriggerURL}}
  TF_VAR_MAIN_MANAGER: ${{inputs.mainManager}}
  ARM_SUBSCRIPTION_ID: ${{secrets.SUBSCRIPTION_ID}}
  ARM_TENANT_ID: ${{secrets.ARM_TENANT_ID}}
  ARM_CLIENT_ID: ${{secrets.ARM_CLIENT_ID}}
  ARM_CLIENT_SECRET: ${{secrets.ARM_CLIENT_SECRET}}
  
jobs:
  job1:
    runs-on: ubuntu-latest

    # defaults:
    #   run:
    #     working-directory: terraform

    steps:
      - uses: actions/checkout@v3

      - name: try
        run: echo "hello terraform automation"

      - name: üß© HashiCorp - Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.0
      
      # - name: üîë az login
      #   id: az-login
      #   uses: azure/login@v1
      #   with:
      #     creds: '{"clientId":"${{ secrets.ARM_CLIENT_ID }}","clientSecret":"${{ secrets.ARM_CLIENT_SECRET }}","subscriptionId":"${{ secrets.SUBSCRIPTION_ID }}","tenantId":"${{ secrets.ARM_TENANT_ID }}"}'
      #     enable-AzPSSession: true 
        
      - name : üîë az login
        id : az-login
        run : az login --service-principal -u $ARM_CLIENT_ID -p $ARM_CLIENT_SECRET --tenant $ARM_TENANT_ID  

      # - name: Log in with Azure
      #   uses: azure/login@v1
      #   with:
      #     client-id: ${{ secrets.ARM_CLIENT_ID }}
      #     client-secret: ${{ secrets.ARM_CLIENT_SECRET }}
      #     tenant-id: ${{ secrets.ARM_TENANT_ID }}
      #     subscription-id: ${{ secrets.SUBSCRIPTION_ID }}

      # - name: üîë az login
      #   id: az-login
      #   run: az login --service-principal --username ${{secrets.ARM_CLIENT_ID}} --password ${{secrets.ARM_CLIENT_SECRET}} --tenant ${{secrets.ARM_TENANT_ID}}
      # - name: Terraform init azurerm backend
      #   uses: ahmedig/terraform-azurerm-backend@v4
      #   with:
      #     azure_credentials: '{"clientId":"${{ secrets.ARM_CLIENT_ID }}","clientSecret":"${{ secrets.ARM_CLIENT_SECRET }}","subscriptionId":"${{ secrets.SUBSCRIPTION_ID }}","tenantId":"${{ secrets.ARM_TENANT_ID }}"}'
      #     resource_group_name: NetworkWatcherRG
      #     container_name: terraformstate-demo
      #     storage_account_name: myfirsttrail
      #     file_name: terraform.tfstate
      #     subscription_id: ${{secrets.SUBSCRIPTION_ID}}
      #     tf_working_directory: ./terraform


      - name: üèóÔ∏è Terraform Init
        id: init
        run: terraform init 
 
      - name: üìã Terraform Plan
        id: plan
        run: terraform plan -out=tfplan -input=false 
        working-directory: ./terraform

      - name: ‚úÖ Terraform Apply
        id: apply
        run: terraform apply -input=false -auto-approve tfplan
        working-directory: ./terraform

      # - name: ‚úÖ Terraform Destroy
      #   id: destroy
      #   run: terraform destroy -input=false -auto-approve 
      #   working-directory: ./terraform


