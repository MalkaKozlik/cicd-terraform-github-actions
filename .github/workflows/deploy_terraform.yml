name: 'Terraform Automation'

on:
  workflow_dispatch: 
    inputs:
      workspaceId:
        required: true
      httpTriggerURL:
        required: true
      mainManager: 
        required: true

env:
  TF_VAR_subscription_id: ${{secrets.SUBSCRIPTION_ID}}
  TF_VAR_WORKSPACE_ID:  ${{inputs.workspaceId}}
  TF_VAR_HTTP_TRIGGER_URL:  ${{inputs.httpTriggerURL}}
  TF_VAR_MAIN_MANAGER: ${{inputs.mainManager}}
  ARM_SUBSCRIPTION_ID: ${{secrets.SUBSCRIPTION_ID}}
  ARM_TENANT_ID: ${{secrets.ARM_TENANT_ID}}
  ARM_CLIENT_ID: ${{secrets.ARM_CLIENT_ID}}
  ARM_CLIENT_SECRET: ${{secrets.ARM_CLIENT_SECRET}}
  
jobs:
  job1:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: terraform

    steps:
      - uses: actions/checkout@v3

      - name: try
        run: echo "hello terraform automation"

      - name: üß© HashiCorp - Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.0
        
      - name : üîë az login
        id : az-login
        run : az login --service-principal -u $ARM_CLIENT_ID -p $ARM_CLIENT_SECRET --tenant $ARM_TENANT_ID  

      - name: üèóÔ∏è Terraform Init
        id: init
        run: terraform init 

 
      - name: üìã Terraform Plan
        id: plan
        run: terraform plan -out=tfplan -input=false 

      - name: ‚úÖ Terraform Apply
        id: apply
        run: terraform apply -input=false -auto-approve tfplan

      # - name: ‚úÖ Terraform Destroy
      #   id: destroy
      #   run: terraform destroy -input=false -auto-approve 
      #   working-directory: ./terraform

      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v1
        with:
          event-type: succeeded
          client-payload: -|
          {
            "function_app_name": steps.apply.outputs.functions_app_name
          }